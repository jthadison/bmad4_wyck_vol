[tool.poetry]
name = "bmad-wyckoff-backend"
version = "0.1.0"
description = "BMAD Wyckoff Volume Pattern Detection System - Backend"
authors = ["BMAD Team"]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.109.0"
sqlalchemy = "^2.0.0"
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
pandas = "^2.2.0"
numpy = "^2.0.0"
httpx = "^0.27.0"
websockets = "^14.0"
uvicorn = {extras = ["standard"], version = "^0.27.0"}
psycopg = {extras = ["binary", "pool"], version = "^3.1.0"}
alembic = "^1.13.0"
python-dotenv = "^1.0.0"
greenlet = "^3.0.0"
click = "^8.1.0"
yfinance = "^0.2.0"
structlog = "^24.1.0"
redis = {extras = ["hiredis"], version = "^5.0.0"}

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-asyncio = "^0.23.0"
pytest-httpx = "^0.30.0"
pytest-mock = "^3.12.0"
mypy = "^1.8.0"
ruff = "^0.1.0"
pre-commit = "^3.6.0"
httpx = "^0.27.0"

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.poetry.scripts]
wyckoff = "src.cli.ingest:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
